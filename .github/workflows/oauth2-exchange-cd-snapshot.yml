name: 'oauth2-exchange CD (snapshots)'

on:
  push:
    branches:
      - 'develop'

jobs:
  core-deploy-snapshot:
    name: 'oauth2-exchange-core: deploy snapshot'
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: core

    steps:
      - uses: actions/checkout@v2

      - name: Setting up JDK 17 and Maven Central Repository
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          cache: maven

      - name: Publish with Maven
        run: mvn clean deploy
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}


  spring-boot-autoconfigure-deploy-snapshot:
    name: 'oauth2-exchange-spring-boot-autoconfigure: deploy snapshot'
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: spring-boot/autoconfigure

    steps:
      - uses: actions/checkout@v2

      - name: Setting up JDK 17 and Maven Central Repository
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          cache: maven

      - name: Publish with Maven
        run: mvn clean deploy
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}


  spring-boot-starter-deploy-snapshot:
    name: 'oauth2-exchange-spring-boot-starter: deploy snapshot'
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: spring-boot/starter

    steps:
      - uses: actions/checkout@v2

      - name: Setting up JDK 17 and Maven Central Repository
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          cache: maven

      - name: Publish with Maven
        run: mvn clean deploy
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}